Excel列名変換問題で第２回社内プログラミングコンテストを開催してみた(前編) - ITは芸術だ
http://d.hatena.ne.jp/JunichiIto/20111102/1320253815
にチャレンジしてみました！

一番使い慣れているRubyでやりました。
バージョン管理しなかったので、スナップショット的にファイルを残しました。

1_column_name_conv.rb
	第1問の回答。開始31分で保存しました。
2_column_name_conv2_timeover.rb
	開始90分のタイムオーバー時点のファイルです。
3_column_name_conv2_successed.rb
	第2問の回答（ちゃんとテストしてない）。開始105分です。
4_column_name_conv2.rb
	その後時間をかけてリファクタリングしたり反省点を書いたりしたものです。

テストコードがないので本当にちゃんと動いているかはわかりません。
あとで書くかも。
記事の後半まだかなー！

【実行例】
>ruby -d 4_column_name_conv2.rb 0 XFD
16384
rollback: XFD (OK)

>ruby -d 4_column_name_conv2.rb 1 16384
result_div: 16384 / 26**2 = 24 => X
result_mod: 16384 % 26**2 = 160
  result_div: 160 / 26**1 = 6 => F
  result_mod: 160 % 26**1 = 4
    result_div: 4 / 26**0 = 4 => D
XFD
rollback: 16384 (OK)

【作業時間メモ】
1854(0m) 第1問start
1915(21m) 動いた（つもりだった）
1925(31m) リファクタリング＆バグ修正
1925(31m) 第2問start
2016(42m) 引数 "1 1" 成功
2024(90m) 終了。column_name_conv2_timeover.rb に保存して継続
2026(92m) "1 (num)" とすべき引数を "1 (chars)" と打ってハマっていたことに気づく
2035(101m) いまさら if $DEBUG を導入
2037(103m) "1 27" 成功、"1 26" 失敗（境界値のミス）
2039(105m) 動いた。column_name_conv2_successed.rb に保存して継続
2218(204m) リファクタリング終了
2249(235m) 記事を読んで反省終了。1位のreverseしない計算方法に感心した

【反省】
・あほな実行をしてしまうのでテストコードを書いたほうがよかった
・↑タイムオーバーですぐ気づいたのでリラックス大事
・+-1の差に注意。考えるよりも puts で確認したほうがはやい
・最初から puts var if $DEBUG を書きまくっておけばよかった
・繰り上がりの数字である 26 をどう扱うかで悩んだ。素直に 26 でもよかった。
・つたない英語で変数名にこだわるとめんどい
・凝った if $DEBUG を書くならテストコードでよかった
・バージョン管理はしてもよかったかなあ。どっちでもいい感じだった

【今後こころがけること】
・開発中は p, puts しまくる
・手ストが一瞬でもめんどうに感じたらテストコードを書く（絶対ミスる）
・英語調べるよりもローマ字とコメント遣う（そのうち直せばいい）
・ハマったら落ち着いて「怪しいと思うところ」「ではないところ」を見る